# This is a basic workflow to help you get started with Actions

name: Build & Deploy

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Switch to Branch
        run: git checkout develop
        
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 14
          
      - name: Install Dependencies
        run: yarn install
        
      - name: Build Client & Server
        run: yarn workspace @85830/server build && yarn workspace @85830/client build
        
          
      - name: Run PostgreSQL
        run: docker-compose -f ./apps/server/docker-compose.yml up -d
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          
      - name: Write .env File
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: ./apps/server/.env
          contents:
            POSTGRES_DB = ${{ secrets.POSTGRES_DB }}
            POSTGRES_USER = ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD = ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_HOST = ${{ secrets.POSTGRES_HOST }}
            POSTGRES_PORT = ${{ secrets.POSTGRES_PORT }}
            DATABASE_URL = ${{ secrets.DATABASE_URL }}
            SERVER_HOST = ${{ secrets.SERVER_HOST }}
            SERVER_PORT = ${{ secrets.SERVER_PORT }}
            SESSION_SECRET = ${{ secrets.SESSION_SECRET }}
          write-mode: overwrite
          
          
      - name: ls -la Dir
        run: |
          cd /home/runner/work/85830/85830
          ls -la
        
      - name: Run server
        run: node ./apps/server/dist/src/main.js
      
      - name: Run client
        run: yarn dlx serve ./apps/client/dist
